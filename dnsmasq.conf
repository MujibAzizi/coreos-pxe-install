# Requires these variables:
#  boot_server_ip: IP of the boot server
#  boot_server_ip_base: IP base of the boot server's local network, this should cover the booted server's IP range e.g. 10.2.0.0
#  boot_server_netmask: netmask covering the booted servers' IP range e.g. 255.255.255.0
#  inventory_dir: base directory for bootcfg data

# Disable DNS service
port=0

# Set the username that dnsmasq will switch to after startup
# note that dnsmasq must be started as root
user=spencer

# with no interface=, dnsmasq on OS X binds to UDP ports as follows:
#   67 (DHCP) on *
#   69 (TFTP) on adapter's IP e.g. 10.2.0.200 and also 127.0.0.1
#   4011 (PXE proxyDHCP) on *
#   also a bunch of IPv6 listens
#interface=en0

# with listen-address, dnsmasq on OS X binds to UDP ports as follows:
#listen-address={{ boot_server_ip }}
listen-address=10.2.0.200
#   67 (DHCP) on *
#   69 (TFTP) on listen-address IP
#   4011 (PXE proxyDHCP) on *

# bind-interfaces disallows binding to 0.0.0.0, because dnsmasq doesn't support that on OS X
# this avoids a warning in the log
bind-interfaces

# Make DHCP run in proxy mode, it does not supply IP addresses, only PXE responses
#dhcp-range={{ boot_server_ip_base }},proxy,{{ boot_server_netmask }}
dhcp-range=10.2.0.0,proxy,255.255.255.0

# Relocate the dnsmasq.leases file which is created but not used
#dhcp-leasefile={{ inventory_dir }}/.bootcfg/dnsmasq.data/dnsmasq.leases
dhcp-leasefile=/Users/spencer/.bootcfg/assets/dnsmasq.data/dnsmasq.leases

# Enable the TFTP server
enable-tftp
tftp-root=/Users/spencer/.bootcfg/assets/pxe

# kill multicast for DHCP PXE
dhcp-option=vendor:PXEClient,6,2b

# set tag "ipxe" if request comes from iPXE ("iPXE" user class)
dhcp-userclass=set:ipxe,iPXE

# set tag "bzimage" if IPXE bzimage option supported
dhcp-match=set:bzimage,175,24

# if PXE request came from regular PXE firmware, serve iPXE firmware (via TFTP)
dhcp-boot=tag:!ipxe,undionly.kpxe
pxe-service=tag:!ipxe,x86PC,"PXE chainload to iPXE",undionly.kpxe

# if PXE request came from PXE, or IPXE that does not support bzimage, serve iPXE firmware
dhcp-boot=tag:!bzimage,undionly.kpxe
pxe-service=tag:!bzimage,x86PC,"Load IPXE",undionly.kpxe

# otherwise, grab an iPXE boot script from the bootcfg server
#dhcp-boot=tag:ipxe,http://{{ boot_server_ip }}:8080/boot.ipxe
dhcp-boot=tag:bzimage,http://10.2.0.200:8080/boot.ipxe
#pxe-service=tag:ipxe,x86PC,"Run iPXE boot",http://{{ boot_server_ip }}:8080/boot.ipxe
pxe-service=tag:bzimage,x86PC,"Run iPXE boot",http://10.2.0.200:8080/boot.ipxe